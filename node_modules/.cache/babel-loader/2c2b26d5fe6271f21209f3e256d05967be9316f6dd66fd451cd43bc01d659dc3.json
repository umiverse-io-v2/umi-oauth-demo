{"ast":null,"code":"var _jsxFileName = \"/Users/laifu/Documents/umiverse.io/repo_v2/umi-oauth-demo/src/Pages/LoginSuccess.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { decrypt, encrypt } from '../utils/AES';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretKey = process.env.REACT_APP_API_SECRET || 'your-secret-key'; // 从环境变量获取密钥\n\nconst LoginSuccess = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const authorizationCode = queryParams.get('authorizationCode');\n  const [idToken, setIdToken] = useState(null);\n  const [encryptString, setEncryptString] = useState('');\n  const [decryptString, setDecryptString] = useState('');\n  useEffect(() => {\n    if (authorizationCode) {\n      try {\n        // 解密 authorizationCode，得到 idToken\n        const decryptedData = decrypt(authorizationCode, secretKey);\n        setIdToken(decryptedData);\n        console.log('Decrypted idToken:', decryptedData);\n        const encryptString = encrypt(decryptedData, secretKey);\n        setEncryptString(encryptString);\n      } catch (error) {\n        console.error('Error decrypting authorizationCode:', error);\n      }\n    }\n  }, [authorizationCode, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login successful, welcome to our website!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), authorizationCode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your authorizationCode is: \", authorizationCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this), idToken && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your idToken is: \", idToken]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), encryptString && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your encryptString is: \", encryptString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), decryptString && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your decryptString is: \", decryptStringdecryptString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSuccess, \"5/upL3vsF8YodBCgLXjPABeKQ5E=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginSuccess;\nexport default LoginSuccess;\nvar _c;\n$RefreshReg$(_c, \"LoginSuccess\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","decrypt","encrypt","jsxDEV","_jsxDEV","secretKey","process","env","REACT_APP_API_SECRET","LoginSuccess","_s","navigate","location","queryParams","URLSearchParams","search","authorizationCode","get","idToken","setIdToken","encryptString","setEncryptString","decryptString","setDecryptString","decryptedData","console","log","error","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","decryptStringdecryptString","_c","$RefreshReg$"],"sources":["/Users/laifu/Documents/umiverse.io/repo_v2/umi-oauth-demo/src/Pages/LoginSuccess.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport CryptoJS from 'crypto-js';\nimport { decrypt, encrypt, restoreSecretKey } from '../utils/AES';\n\nconst secretKey = process.env.REACT_APP_API_SECRET || 'your-secret-key'; // 从环境变量获取密钥\n\nconst LoginSuccess: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const authorizationCode = queryParams.get('authorizationCode');\n  const [idToken, setIdToken] = useState<string | null>(null);\n  const [encryptString, setEncryptString] = useState<String>('');\n  const [decryptString, setDecryptString] = useState<String>('');\n\n  useEffect(() => {\n    if (authorizationCode) {\n      try {\n        // 解密 authorizationCode，得到 idToken\n        const decryptedData = decrypt(authorizationCode, secretKey);\n        setIdToken(decryptedData);\n        console.log('Decrypted idToken:', decryptedData);\n\n\n        const encryptString = encrypt(decryptedData, secretKey);\n        setEncryptString(encryptString);\n      } catch (error) {\n        console.error('Error decrypting authorizationCode:', error);\n      }\n    }\n\n\n\n  }, [authorizationCode, navigate]);\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <h1>Login successful, welcome to our website!</h1>\n      {authorizationCode && <p>Your authorizationCode is: {authorizationCode}</p>}\n      {idToken && <p>Your idToken is: {idToken}</p>}\n      {encryptString && <p>Your encryptString is: {encryptString}</p>}\n      {decryptString && <p>Your decryptString is: {decryptStringdecryptString}</p>}\n    </div>\n  );\n};\n\nexport default LoginSuccess;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}