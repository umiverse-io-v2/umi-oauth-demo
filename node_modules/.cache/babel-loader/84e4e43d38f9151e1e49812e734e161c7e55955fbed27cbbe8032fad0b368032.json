{"ast":null,"code":"var _jsxFileName = \"/Users/laifu/Documents/umiverse.io/repo_v2/umi-oauth-demo/src/Pages/LoginSuccess.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { decrypt } from '../utils/AES';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretKey = process.env.REACT_APP_SECRET_KEY || 'your-secret-key'; // 从环境变量获取密钥\n\nconst LoginSuccess = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const authorizationCode = queryParams.get('authorizationCode');\n  const [idToken, setIdToken] = useState(null);\n  useEffect(() => {\n    if (authorizationCode) {\n      try {\n        // 解密 authorizationCode，得到 idToken\n        const decryptedData = decrypt(authorizationCode, secretKey);\n        setIdToken(decryptedData);\n        console.log('Decrypted idToken:', decryptedData);\n      } catch (error) {\n        console.error('Error decrypting authorizationCode:', error);\n      }\n\n      // Optionally, redirect after a few seconds\n      setTimeout(() => {\n        navigate('/index');\n      }, 2000); // Redirect to /index after 2 seconds\n    }\n  }, [authorizationCode, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login successful, welcome to our website!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), idToken && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your idToken is: \", idToken]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSuccess, \"krnTAwy0MrxW0NXv03Z6hS2Ijbc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginSuccess;\nexport default LoginSuccess;\nvar _c;\n$RefreshReg$(_c, \"LoginSuccess\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","decrypt","jsxDEV","_jsxDEV","secretKey","process","env","REACT_APP_SECRET_KEY","LoginSuccess","_s","navigate","location","queryParams","URLSearchParams","search","authorizationCode","get","idToken","setIdToken","decryptedData","console","log","error","setTimeout","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/laifu/Documents/umiverse.io/repo_v2/umi-oauth-demo/src/Pages/LoginSuccess.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport CryptoJS from 'crypto-js';\nimport { decrypt, restoreSecretKey } from '../utils/AES';\n\nconst secretKey = process.env.REACT_APP_SECRET_KEY || 'your-secret-key'; // 从环境变量获取密钥\n\nconst LoginSuccess: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const authorizationCode = queryParams.get('authorizationCode');\n  const [idToken, setIdToken] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (authorizationCode) {\n      try {\n        // 解密 authorizationCode，得到 idToken\n        const decryptedData = decrypt(authorizationCode, secretKey);\n        setIdToken(decryptedData);\n        console.log('Decrypted idToken:', decryptedData);\n      } catch (error) {\n        console.error('Error decrypting authorizationCode:', error);\n      }\n\n      // Optionally, redirect after a few seconds\n      setTimeout(() => {\n        navigate('/index');\n      }, 2000); // Redirect to /index after 2 seconds\n    }\n  }, [authorizationCode, navigate]);\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <h1>Login successful, welcome to our website!</h1>\n      {idToken && <p>Your idToken is: {idToken}</p>}\n    </div>\n  );\n};\n\nexport default LoginSuccess;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,SAASC,OAAO,QAA0B,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,iBAAiB,CAAC,CAAC;;AAEzE,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,iBAAiB,GAAGH,WAAW,CAACI,GAAG,CAAC,mBAAmB,CAAC;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd,IAAIkB,iBAAiB,EAAE;MACrB,IAAI;QACF;QACA,MAAMI,aAAa,GAAGlB,OAAO,CAACc,iBAAiB,EAAEX,SAAS,CAAC;QAC3Dc,UAAU,CAACC,aAAa,CAAC;QACzBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,aAAa,CAAC;MAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;;MAEA;MACAC,UAAU,CAAC,MAAM;QACfb,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACK,iBAAiB,EAAEL,QAAQ,CAAC,CAAC;EAEjC,oBACEP,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDxB,OAAA;MAAAwB,QAAA,EAAI;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDd,OAAO,iBAAId,OAAA;MAAAwB,QAAA,GAAG,mBAAiB,EAACV,OAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/BID,YAAsB;EAAA,QACTT,WAAW,EACXC,WAAW;AAAA;AAAAgC,EAAA,GAFxBxB,YAAsB;AAiC5B,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}